abstract class Shape {
    public abstract void draw();
    public abstract double calculateArea();

class Circle extends Shape {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    public void draw() {
        System.out.println("Drawing a Circle with radius: " + radius);
    }

    @Override
    public double calculateArea() {
        return Math.PI * radius * radius; 
    }
}


class Square extends Shape {
    private double side;

    public Square(double side) {
        this.side = side;
    }

    @Override
    public void draw() {
        System.out.println("Drawing a Square with side: " + side);
    }

    @Override
    public double calculateArea() {
        return side * side; 
    }
}


class Triangle extends Shape {
    private double base;
    private double height;

    public Triangle(double base, double height) {
        this.base = base;
        this.height = height;
    }

    @Override
    public void draw() {
        System.out.println("Drawing a Triangle with base: " + base + " and height: " + height);
    }

    @Override
    public double calculateArea() {
        return 0.5 * base * height; 
    }
}

public class ShapeTest {
    public static void main(String[] args) {
        Shape circle = new Circle(5);
        circle.draw();
        System.out.println("Circle Area: " + circle.calculateArea());

        Shape square = new Square(4);
        square.draw();
        System.out.println("Square Area: " + square.calculateArea());

        Shape triangle = new Triangle(3, 6);
        triangle.draw();
        System.out.println("Triangle Area: " + triangle.calculateArea());
    }
}
